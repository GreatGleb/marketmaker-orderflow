services:
  web:
    image: nginx:latest
    container_name: orderflow_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - general
    networks:
      - orderflow_network

  db:
    image: supabase/postgres:15.1.0.117
    container_name: orderflow_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres
      POSTGRES_MAX_CONNECTIONS: 200
      POSTGRES_SHARED_BUFFERS: 512MB
      POSTGRES_WORK_MEM: 64MB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - orderflow_network

  meta:
    image: ghcr.io/supabase/postgres-meta:v0.75.0
    container_name: orderflow_meta
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: db
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: secret
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - orderflow_network

  studio:
    image: supabase/studio:latest
    container_name: orderflow_studio
    restart: unless-stopped
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      SUPABASE_URL: http://localhost:8000
      SUPABASE_REST_URL: http://localhost:8000/rest/v1/
      SUPABASE_ANON_KEY: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwiaWF0IjoxNjQxNzY5MjAwLCJleHAiOjE3OTk1MzU2MDAsInJvbGUiOiJhbm9uIn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
      SUPABASE_SERVICE_KEY: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwiaWF0IjoxNjQxNzY5MjAwLCJleHAiOjE3OTk1MzU2MDAsInJvbGUiOiJzZXJ2aWNlX3JvbGUifQ.M2i_7qxC8YW_YHQb_O_TH_TsnqE9UvwC_A7nfeIwJ7U
    ports:
      - "3000:3000"
    depends_on:
      - db
      - meta
    networks:
      - orderflow_network

  general:
    build: general
    container_name: orderflow_general
    command: ./boot.sh
    volumes:
      - ./general:/opt/services/app/src:Z
    env_file:
      - general/.env
    ports:
      - "8000:8000"
    depends_on:
        - db
    networks:
        - orderflow_network
        - redis_network

  general-celery-worker:
    build: general
    container_name: orderflow_celery_worker
    command: celery -A app.tasks worker -l info
    volumes:
      - ./general:/opt/services/app/src:Z
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=true
    depends_on:
      - redis
    env_file:
      - general/.env
    networks:
      - redis_network
      - orderflow_network

  general-celery-beat:
    build: general
    container_name: orderflow_celery_beat
    command: celery -A app.tasks beat -l info
    volumes:
      - ./general:/opt/services/app/src:Z
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=true
    depends_on:
      - redis
    env_file:
      - general/.env
    networks:
      - redis_network
      - orderflow_network

  flower:
    container_name: orderflow_flower
    image: mher/flower
    command: celery flower
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    expose:
      - 5555
    depends_on:
      - redis
    ports:
      - "5555:5555"
    networks:
      - redis_network

  redis:
    image: redis:latest
    container_name: orderflow_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_volume:/data
    networks:
      - redis_network

volumes:
  postgres_data:
  redis_volume:

networks:
  orderflow_network:
    driver: bridge
  redis_network:
    driver: bridge
